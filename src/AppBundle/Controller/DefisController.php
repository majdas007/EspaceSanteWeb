<?php

namespace AppBundle\Controller;

use AppBundle\Entity\Defis;
use AppBundle\Entity\MembresDefis;
use AppBundle\Entity\Score;
use AppBundle\Form\DefisType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Component\HttpFoundation\Request;

/**
 * Defi controller.
 *
 * @Route("defis")
 */
class DefisController extends Controller
{
    /**
     * Lists all defi entities.
     *
     * @Route("/", name="defis_index")
     * @Method("GET")
     */
    public function indexAction(Request $request)
    {
        $em = $this->getDoctrine()->getManager();

        $defis = $em->getRepository('AppBundle:Defis')->findAll();
        $defi = new Defis();
        $user = $this->getUser();
        $paginator  = $this->get('knp_paginator');
        $pag = $paginator->paginate(
            $defis,
            $request->query->getInt('page',1),
            $request->query->getInt('limit',6)

        );
        $form = $this->createForm(DefisType::class,$defi);
        $form->handleRequest($request);
        if ($form->isSubmitted())
        {
            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file1 */
            $file = $defi->getImage();
            $fileName1 = $this->generateUniqueFileName().'.'.$file->guessExtension();
            $file->move(
                $this->getParameter('defi_directory'),
                $fileName1
            );
            $defi->setImage($fileName1);




            $em->persist($defi);
            $em->flush();
            return $this->redirectToRoute('defis');
        }


        return $this->render('defis/index.html.twig', array(
            'defis' => $pag,
            'user' => $user,
            'form'=>$form->createView(),

        ));
    }

    /**
     * Finds and displays a defi entity.
     *
     * @Route("/{id}", name="defis_show")
     * @Method("GET")
     */
    public function showAction(Defis $defi , Request $request)
    {
        $em = $this->getDoctrine()->getManager();
        $user = $this->getUser();
            $m = new MembresDefis();
            $exist = false;
            $check = null ;
            if($user != null)
            {
                $exist= $em->getRepository('AppBundle:Defis')->existBattle($defi->getId(),$user->getId());
                $check = $em->getRepository('AppBundle:Defis')->check($defi->getId(),$user->getId());
            }

        $disc = $em->getRepository('AppBundle:Defis')->FindDisc($defi->getId());
        $Defi = $em->getRepository('AppBundle:Defis')->find($defi->getId());
        $list =$em->getRepository('AppBundle:Defis')->FindUsers($defi->getId());
       if ($request->isMethod('post'))
        {
            $m->setIdUser($user);
            $m->setIdDefis($Defi);
            $m->setScore(0);
            $em->persist($m);

            $em->getRepository('AppBundle:Defis')->updatememebermax($defi->getId());
            $em->flush();
            return $this->redirectToRoute('battle',array(
                'defi'=>$defi->getId()));
        }
        $em->clear();
        return $this->render('defis/show.html.twig', array(
            'defi' => $defi,
           /* 'f'=>$form->createView(),*/
            'u'=>$user,
            'd'=>$disc,
            'list'=>$list,
            'exist'=>$exist,
            'check'=>$check




        ));
    }


    public  function deleteaction($id)
    {
        $em = $this->getDoctrine()->getManager();
        $defi = $em->getRepository("AppBundle:Defis")->find($id);
        $em->remove($defi);
        $em->flush();
        return $this->redirectToRoute(  'defis');
    }


    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }


}
